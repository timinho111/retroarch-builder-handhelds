name: Debug Build for RK3566

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04-arm

    steps:
    # STEP 1: CHECKOUT THE BUILD SCRIPT REPOSITORY
    - name: Checkout rk3566_core_builds repository
      uses: actions/checkout@v4
      with:
        repository: 'christianhaitian/rk3566_core_builds'
        path: 'rk3566_core_builds'

    # STEP 2: INSTALL COMPREHENSIVE SYSTEM DEPENDENCIES
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          git \
          wget \
          python3 \
          meson \
          ninja-build \
          pkg-config \
          libudev-dev \
          libdrm-dev \
          libegl1-mesa-dev \
          libgles2-mesa-dev \
          libgl1-mesa-dev \
          libasound2-dev \
          libgbm-dev

    # STEP 3: BUILD AND INSTALL THE ROCKCHIP RGA LIBRARY
    - name: Build and Install Rockchip RGA Library
      run: |
        git clone --depth=1 https://github.com/amarula/rockchip-linux-rga.git /tmp/librga
        cd /tmp/librga
        meson setup build
        ninja -C build
        sudo cp build/librga.so /usr/local/lib/
        sudo mkdir -p /usr/local/include/rga
        sudo cp *.h /usr/local/include/rga/
        echo "/usr/local/lib" | sudo tee /etc/ld.so.conf.d/rga.conf
        sudo ldconfig

    # STEP 4: EXECUTE THE BUILDS.SH SCRIPT
    - name: Build RetroArch Debian Package
      id: build_script
      working-directory: ./rk3566_core_builds
      run: |
        sudo ./builds.sh retroarch

    # ==========================================================================
    # STEP 5: (NEW) DEBUGGING STEP TO FIND THE OUTPUT
    # ==========================================================================
    - name: Debug - List all created files
      run: |
        echo "Listing all files in the workspace..."
        ls -R

    # The steps below are temporarily disabled until we find the correct path.
    # - name: Extract Binary from .deb Package
    #   run: |
    #     mkdir -p extracted_binary
    #     DEB_FILE=$(find rk3566_core_builds/debs/ -name "retroarch*.deb")
    #     dpkg-deb -x $DEB_FILE extracted_binary
    #
    # - name: Upload RetroArch Binary File
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: retroarch-binary-rk3566
    #     path: extracted_binary/usr/games/retroarch
