name: Build RetroArch for TrimUI Smart Pro (Brick)

on:
  workflow_dispatch:

jobs:
  build:
    # Use a stable LTS version of Ubuntu for reliable multi-arch support
    runs-on: ubuntu-22.04

    steps:
    # STEP 1: Set up a correctly scoped Multi-Arch build environment
    - name: Setup Multi-Arch Environment
      run: |
        # Explicitly scope the default sources to amd64 ONLY
        sudo sed -i 's/^deb /deb [arch=amd64] /' /etc/apt/sources.list
        
        # Add the arm64 architecture
        sudo dpkg --add-architecture arm64
        
        # Add the official "ports" repository specifically for arm64 packages
        echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy main restricted universe multiverse" | sudo tee /etc/apt/sources.list.d/arm64.list
        echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64.list
        echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64.list
        
        # Update the package list
        sudo apt-get update

    # STEP 2: Download the Official Arm Compiler Toolchain
    - name: Download and Setup Arm GNU Toolchain
      run: |
        wget -q https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        mkdir -p ${{ github.workspace }}/arm-toolchain
        tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz -C ${{ github.workspace }}/arm-toolchain --strip-components=1
        echo "${{ github.workspace }}/arm-toolchain/bin" >> $GITHUB_PATH

    # ==========================================================================
    # STEP 3: Install All Host and Target (arm64) Dependencies
    # ==========================================================================
    - name: Install Host and Target Dependencies
      run: |
        # Install build tools for the runner (host)
        sudo apt-get install -y build-essential pkg-config git
        
        # Install the required libraries for the arm64 target, including the missing systemd
        sudo apt-get install -y libegl-dev:arm64 libgles2-mesa-dev:arm64 libudev-dev:arm64 libasound2-dev:arm64 libgbm-dev:arm64 libsystemd-dev:arm64

    # ==========================================================================
    # STEP 4: Clone and Configure RetroArch for Cross-Compilation
    # ==========================================================================
    - name: Clone and Configure RetroArch v1.21.0
      run: |
        git clone https://github.com/libretro/RetroArch.git
        cd RetroArch
        git checkout v1.21.0
        
        echo "--- Verifying pkg-config installation ---"
        which pkg-config
        
        # This is the definitive environment setup for cross-compilation
        export CC=aarch64-none-linux-gnu-gcc
        export CXX=aarch64-none-linux-gnu-g++
        export AR=aarch64-none-linux-gnu-ar
        export STRIP=aarch64-none-linux-gnu-strip
        export PKG_CONFIG_SYSROOT_DIR=/
        export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig
        export PKG_CONFIG_LIBDIR=/usr/lib/aarch64-linux-gnu

        ./configure \
          --host=aarch64-none-linux-gnu \
          --disable-x11 --disable-wayland --disable-pulse \
          --enable-opengles --enable-egl --enable-kms

    # ==========================================================================
    # STEP 5: Compile RetroArch
    # ==========================================================================
    - name: Compile RetroArch
      run: |
        cd RetroArch
        make -j$(nproc)

    # ==========================================================================
    # STEP 6: Upload the finished RetroArch binary as an artifact
    # ==========================================================================
    - name: Upload RetroArch Binary
      uses: actions/upload-artifact@v4
      with:
        name: retroarch-trimui-brick
        path: RetroArch/retroarch
